{"version":3,"file":"sorting-bundle.66f869c4.js","sources":["../../src/js/sorting-bundle.js"],"sourcesContent":["export const sortByMeterNumber = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.MeterNumber.toLowerCase(),\n                fb = b.MeterNumber.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByReadDate = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.ReadDate !== '' ? new Date(a.ReadDate) : new Date(\"1/1/1\"),\n                fb = b.ReadDate !== '' ? new Date(b.ReadDate) : new Date(\"1/1/1\");\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByBillingPeriod = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.BillingPeriod,\n                fb = b.BillingPeriod;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByBilledAmount = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.BilledAmount.toLowerCase(),\n                fb = b.BilledAmount.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByCurrentReading = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.CurrentReading !== '' ? parseFloat(a.CurrentReading?.split(',').join('')) : 0,\n                fb = b.CurrentReading !== '' ? parseFloat(b.CurrentReading?.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByPreviousReading = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.PreviousReading !== '' ? parseFloat(a.PreviousReading?.split(',').join('')) : 0,\n                fb = b.PreviousReading !== '' ? parseFloat(b.PreviousReading?.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByTotalUsed = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.TotalUsed !== \"\" ? parseFloat(a.TotalUsed.split(',').join('')) : 0,\n                fb = b.TotalUsed !== \"\" ? parseFloat(b.TotalUsed.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByLow = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.Low !== \"\" ? parseFloat(a.Low.split(',').join('')) : 0,\n                fb = b.Low !== \"\" ? parseFloat(b.Low.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByMed = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.Med !== \"\" ? parseFloat(a.Med.split(',').join('')) : 0,\n                fb = b.Med !== \"\" ? parseFloat(b.Med.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByHigh = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.High !== \"\" ? parseFloat(a.High.split(',').join('')) : 0,\n                fb = b.High !== \"\" ? parseFloat(b.High.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByCritical = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.Critical !== \"\" ? parseFloat(a.Critical.split(',').join('')) : 0,\n                fb = b.Critical !== \"\" ? parseFloat(b.Critical.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByService = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.Service.toLowerCase(),\n                fb = b.Service.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n\n//* SummaryBilling sort functions.\nexport const sortByAccountNumber = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.AccountNumber.toLowerCase(),\n                fb = b.AccountNumber.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByServiceAddress = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.ServiceAddress.toLowerCase(),\n                fb = b.ServiceAddress.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n\nexport const sortByCurrentCharges = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.CurrentCharges !== \"\" ? parseFloat(a.CurrentCharges.split(',').join('')) : 0,\n                fb = b.CurrentCharges !== \"\" ? parseFloat(b.CurrentCharges.split(',').join('')) : 0;\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\nexport const sortByStatus = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.Status?.toLowerCase() || \"\",\n                fb = b.Status?.toLowerCase() || \"\";\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n\nexport const sortByContactName = (type, items) => {\n    if (items && items.length > 1) {\n        return items.sort((a, b) => {\n            let fa = a.ContactName.toLowerCase(),\n                fb = b.ContactName.toLowerCase();\n            if (type == \"asen\") {\n                if (fa < fb) {\n                    return -1;\n                }\n                if (fa > fb) {\n                    return 1;\n                }\n                return 0;\n            } else {\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n"],"names":["sortByMeterNumber","type","items","a","b","fa","fb","sortByReadDate","sortByBillingPeriod","sortByCurrentReading","_a","_b","sortByPreviousReading","sortByTotalUsed","sortByLow","sortByMed","sortByHigh","sortByCritical","sortByService","sortByAccountNumber","sortByServiceAddress","sortByCurrentCharges","sortByStatus","sortByContactName"],"mappings":"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"}